name: Deploy ASP.NET Core app to Azure Web App

on:
 workflow_dispatch:
 push:
    branches: [ main ]
    paths-ignore: 
    - '**.yml'
 pull_request:
    branches: [ main ]
    paths-ignore: 
     - '**.yml'
  
env:
  AZURE_WEBAPP_NAME: aspdotnetcorewelcome    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'           # set this to the dot net version to use

jobs:
  build_test_publish:
    name: 'Build, Test, Publish'
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    -  name: Checkout repo code
       uses: actions/checkout@v2
         
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Create an Issue if build fails
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CommitID: ${{ github.sha }}
      
    - name: Publish
      run:   dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
    
    - name: Test fail
      run: |
        exit 1
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: myappartifact
        path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
    
  notify-if-failure:
    if: (needs.build_test_publish.result == 'failure')
    name: 'Notify on failure'
    needs: build_test_publish
    runs-on: ubuntu-latest
    steps:
      - run: echo "Build failed"
  
  deploy-to-azure:
    if: github.ref == 'refs/heads/main'
    name: 'Deploy Azure Web App'
    needs: build_test_publish
    runs-on: ubuntu-latest
    environment: Production
    steps:
     - name: Download Build Artifact
       uses: actions/download-artifact@v2
       id: appartifact
       with:
        name: myappartifact
        path: myappartifact
   
     - name: 'Deploy Azure Web App'
       uses: azure/webapps-deploy@v2
       with:
         app-name: ${{ env.AZURE_WEBAPP_NAME }} 
         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings 
         package: ${{steps.appartifact.outputs.download-path}}
      
  
  
